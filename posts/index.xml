<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on My Blog</title>
    <link>http://cshung.github.io/posts/</link>
    <description>Recent content in Posts on My Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 25 Jul 2020 19:50:22 -0700</lastBuildDate>
    
	<atom:link href="http://cshung.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ILSpy.ReadyToRun</title>
      <link>http://cshung.github.io/posts/ilspy-readytorun/</link>
      <pubDate>Sat, 25 Jul 2020 19:50:22 -0700</pubDate>
      
      <guid>http://cshung.github.io/posts/ilspy-readytorun/</guid>
      <description>Introduction ILSpy.ReadyToRun is my side project. It is a plugin in ILSpy that allow us to inspect the precompiled code in a ReadyToRun image. My vision is to make all information available in a ready to run image to be displayed in a human readable manner.
What can it do? If you open a ReadyToRun image in ILSpy, it will show up exactly as it was. You can see all the types, the methods, and the decompiled C# code, as usual.</description>
    </item>
    
    <item>
      <title>Introduction to ILCompiler.Reflection.ReadyToRun</title>
      <link>http://cshung.github.io/posts/introduction-to-ilcompiler-reflection-readytorun/</link>
      <pubDate>Thu, 25 Jun 2020 08:08:17 -0700</pubDate>
      
      <guid>http://cshung.github.io/posts/introduction-to-ilcompiler-reflection-readytorun/</guid>
      <description>Introduction ILCompiler.Reflection.ReadyToRun.dll is a new library I introduced in late 2019. It is meant to make the data embedded in a ReadyToRun binary available for access.
Background What is ReadyToRun? ReadyToRun is a new native compilation technology for .NET Core. For people who know about NGEN, it can be roughly thought as the .NET Core version of NGEN.
What is native compilation? When a managed language (such as C#) is compiled, it is compiled into an intermediate language named MSIL.</description>
    </item>
    
  </channel>
</rss>